// ==================================================================================
// ðŸŸ¢ INIZIO ROTTA "Routes03_04AnalisiCaloriePasto"
// Endpoint completo: /api/contacalorie
// ==================================================================================
import { Router } from "express";
import { groq } from "../config.js";
import { CALORIE_SYSTEM_PROMPT1 } from "../prompts/03_04calcolo_calorie_pasto.js";

const router = Router();



// ==================================================================================

router.post('/', async (req, res) => {
Â  Â  try {
Â  Â  Â  Â  const { mealText } = req.body;
Â  Â  Â  Â  if (!mealText) return res.status(400).json({ error: 'Manca il testo del pasto da analizzare.' });

Â  Â  Â  Â  const messages = [
Â  Â  Â  Â  Â  Â  { role: "system", content: CALORIE_SYSTEM_PROMPT1 }, 
Â  Â  Â  Â  Â  Â  { role: "user", content: `Analizza questo pasto: ${mealText}` }
Â  Â  Â  Â  ];

Â  Â  Â  Â  const chatCompletion = await groq.chat.completions.create({
Â  Â  Â  Â  Â  Â  model: "llama-3.3-70b-versatile", 
Â  Â  Â  Â  Â  Â  messages: messages,
Â  Â  Â  Â  Â  Â  response_format: { type: "json_object" } 
Â  Â  Â  Â  });

Â  Â  Â  Â  const rawJson = chatCompletion.choices[0].message.content.trim();
Â  Â  Â  Â  let finalData = JSON.parse(rawJson);

Â  Â  Â  Â  res.status(200).json(finalData);

Â  Â  } catch (error) {
Â  Â  Â  Â  console.error("ðŸš¨ Errore Contacalorie (Groq):", error);
Â  Â  Â  Â  res.status(500).json({ 
Â  Â  Â  Â  Â  Â  error: `Errore Groq: ${error.message}`,
Â  Â  Â  Â  Â  Â  fallback: true
Â  Â  Â  Â  });
Â  Â  }
});

// ==================================================================================
// ðŸŸ¢ FINE ROTTA "Routes03_04AnalisiCaloriePasto"
// ==================================================================================
export default router;